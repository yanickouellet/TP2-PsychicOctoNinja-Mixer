<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkLoop.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB8AAAAbCAYAAACEP1QvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAA3XUAAN11AayHw4MAAAAHdElNRQfeCggNNyW4PwCRAAABs0lEQVRIS8WXPUoEQRCF
        J1ERjMTYv0AQIy/gGcQLeADP4h00VhQxWDDxFgaKoaJiYiAi+Pe+2Wkpe8pleqZn98HH7jTdXex01eva
        oicNxNLw6/j1KD7Ebvk0ZhH8u+KYgTaaEytiXWw0ZE08ixAcrgTjjTQvLsWL+BR2o7awz474V1PiRHiL
        c3EoaloQN8JbkIs7sSVquhXx5C/xLt4SYV2817WYFjUdiHjykdgUHEWqHoTda0+4WhZ2IuyLLgqldi+o
        FKsZcSpWecAIbGBef1cR/GL49Y9wvVdBnNKAzqsH4KwWRVdtV59WlG8IDGeieDIDZOOs6EPsy/4hFnFL
        Dw4DvPI2CdZE7GsririT/eW8+zDAmXA2sbwzTBW5ZOufXPvNdgJ7dzBZS/Z2VWxiZbZTb9Qd9WdFfVKn
        TOwaHN+wgQF/cYUj2Yk4VqpIMBwSp7R7AY5aE96LB8eTOSvPw0fBneB5vGti3DY2G/uAW5PbsybuWW9B
        LugTRnoInUbOzoVOiI7IK19X9Fr0XHYjejLGvZ7Ng0qh96MHbCW6zhA8R50nCyPAgycSHOF6/APJrKL4
        AXodNEqZObSaAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="chkStop.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QPQRXhpZgAATU0AKgAAAAgABwESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAYgEbAAUAAAABAAAAagEoAAMAAAABAAIAAAExAAIAAAAMAAAAcgEyAAIAAAAUAAAAfodpAAQAAAAB
        AAAAkgAAANYAAABIAAAAAQAAAEgAAAABR0lNUCAyLjguMTQAMjAxNDoxMDowOCAxMDozMDo1NQAABZAA
        AAcAAAAEMDIyMaAAAAcAAAAEMDEwMKABAAMAAAAB//8AAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAA
        AAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEkARsABQAAAAEAAAEsASgAAwAAAAEAAgAAAgEABAAA
        AAEAAAE0AgIABAAAAAEAAAKUAAAAAAAAAEgAAAABAAAASAAAAAH/2P/gABBKRklGAAEBAAABAAEAAP/b
        AEMACAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLicgIiwjHBwoNyksMDE0NDQfJzk9
        ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMv/AABEIABAAEAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQID
        BAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR
        8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp
        6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUE
        BAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3
        ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeo
        qaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/
        APDpGfe3zt1PekV38xfmbqO9PkRt7fI3U9qaqPvX5W6jtQB//9n/4QbtaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49J++7vycgaWQ9J1c1TTBNcENlaGlIenJlU3pOVGN6a2M5
        ZCc/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyI+DQoJPHJkZjpSREYgeG1sbnM6
        cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpE
        ZXNjcmlwdGlvbiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iPg0KCQkJPHht
        cDpDcmVhdG9yVG9vbD5BZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaDwveG1wOkNyZWF0b3JUb29s
        Pg0KCQkJPHhtcDpDcmVhdGVEYXRlPjIwMTMtMDctMjBUMDE6MTY6MzEtMDQ6MDA8L3htcDpDcmVhdGVE
        YXRlPg0KCQkJPHhtcDpNb2RpZnlEYXRlPjIwMTMtMDctMjJUMTk6MjI6MDEtMDQ6MDA8L3htcDpNb2Rp
        ZnlEYXRlPg0KCQkJPHhtcDpNZXRhZGF0YURhdGU+MjAxMy0wNy0yMlQxOToyMjowMS0wNDowMDwveG1w
        Ok1ldGFkYXRhRGF0ZT4NCgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCTxyZGY6RGVzY3JpcHRpb24geG1s
        bnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iPg0KCQkJPHhtcE1NOkluc3Rh
        bmNlSUQ+eG1wLmlpZDo1QjNGQjdDQzE5MjA2ODExOEY2MkNFNEU4M0Y4RkZGOTwveG1wTU06SW5zdGFu
        Y2VJRD4NCgkJCTx4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ+eG1wLmRpZDpFMURDNTQwREU5MUYxMUUy
        OTQ2Mzg3MTBBM0U2MUEyMzwveG1wTU06T3JpZ2luYWxEb2N1bWVudElEPg0KCQkJPHhtcE1NOkluc3Rh
        bmNlSUQ+eG1wLmlpZDo1QjNGQjdDQzE5MjA2ODExOEY2MkNFNEU4M0Y4RkZGOTwveG1wTU06SW5zdGFu
        Y2VJRD4NCgkJCTx4bXBNTTpEb2N1bWVudElEIHJkZjpyZXNvdXJjZT0ieG1wLmRpZDpFMURDNTQwREU5
        MUYxMUUyOTQ2Mzg3MTBBM0U2MUEyMyIvPg0KCQkJPHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD54bXAu
        ZGlkOkUxREM1NDBERTkxRjExRTI5NDYzODcxMEEzRTYxQTIzPC94bXBNTTpPcmlnaW5hbERvY3VtZW50
        SUQ+DQoJCQk8eG1wTU06RGVyaXZlZEZyb20gcmRmOnBhcnNlVHlwZT0iUmVzb3VyY2UiPg0KCQkJPC94
        bXBNTTpEZXJpdmVkRnJvbT4NCgkJCTx4bXBNTTpIaXN0b3J5Pg0KCQkJCTxyZGY6U2VxPg0KCQkJCTwv
        cmRmOlNlcT4NCgkJCTwveG1wTU06SGlzdG9yeT4NCgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCTxyZGY6
        RGVzY3JpcHRpb24geG1sbnM6Y3JzPSJodHRwOi8vbnMuYWRvYmUuY29tL2NhbWVyYS1yYXctc2V0dGlu
        Z3MvMS4wLyI+DQoJCQk8Y3JzOkFscmVhZHlBcHBsaWVkPlRydWU8L2NyczpBbHJlYWR5QXBwbGllZD4N
        CgkJPC9yZGY6RGVzY3JpcHRpb24+DQoJCTxyZGY6RGVzY3JpcHRpb24geG1sbnM6cGhvdG9zaG9wPSJo
        dHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIj4NCgkJCTxwaG90b3Nob3A6TGVnYWN5SVBU
        Q0RpZ2VzdD5DRENGRkE3REE4QzdCRTA5MDU3MDc2QUVBRjA1QzM0RTwvcGhvdG9zaG9wOkxlZ2FjeUlQ
        VENEaWdlc3Q+DQoJCQk8cGhvdG9zaG9wOkNvbG9yTW9kZT4zPC9waG90b3Nob3A6Q29sb3JNb2RlPg0K
        CQk8L3JkZjpEZXNjcmlwdGlvbj4NCgkJPHJkZjpEZXNjcmlwdGlvbiB4bWxuczpkYz0iaHR0cDovL3B1
        cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iPg0KCQkJPGRjOmZvcm1hdD5pbWFnZS9qcGVnPC9kYzpmb3Jt
        YXQ+DQoJCTwvcmRmOkRlc2NyaXB0aW9uPg0KCTwvcmRmOlJERj4NCjwveDp4bXBtZXRhPg0KPD94cGFj
        a2V0IGVuZD0ndyc/Pv/bAEMAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQICAgICAgICAgICAwMDAwMDAwMDA//bAEMBAQEBAQEBAQEBAQICAQICAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA//CABEIABAAEAMBEQACEQEDEQH/xAAWAAEBAQAA
        AAAAAAAAAAAAAAAEAwn/xAAWAQEBAQAAAAAAAAAAAAAAAAAAAQL/2gAMAwEAAhADEAAAAcPNIw6Cn//E
        ABcQAQEBAQAAAAAAAAAAAAAAAAMCExL/2gAIAQEAAQUCW17i10U70k00/8QAFBEBAAAAAAAAAAAAAAAA
        AAAAIP/aAAgBAwEBPwEf/8QAFBEBAAAAAAAAAAAAAAAAAAAAIP/aAAgBAgEBPwEf/8QAHxAAAQMFAAMA
        AAAAAAAAAAAAAgADIwEzQlJhMkNi/9oACAEBAAY/AnJDuHmW1epuRy4GZbD9JyM/M8C2rxNxncD1nvTi
        /8QAHBAAAQQDAQAAAAAAAAAAAAAAAAERMUFRwdHw/9oACAEBAAE/Ia1sx64rjOvBP19bOKPkVn//2gAM
        AwEAAgADAAAAEJGf/8QAGhEAAgIDAAAAAAAAAAAAAAAAAAEQEUFxgf/aAAgBAwEBPxDsKsj2f//EABkR
        AQEAAwEAAAAAAAAAAAAAAAERABBBMf/aAAgBAgEBPxBZO5ehiT01/8QAHBABAQACAwEBAAAAAAAAAAAA
        AREAIUFRgTHw/9oACAEBAAE/ECXUCCd74+DzNow4Ky0VQMKtK0GNNdBl/XGnODUNU4hduPc//9k=
</value>
  </data>
  <data name="chkPlay.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAAbCAYAAABxwd+fAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAHdElNRQfeCggMKweK6nYfAAABoUlEQVRIS62Tu04CQRSG
        bWANclnYNaBGG28NIrwANlgYGy3QGgtr1BajibEF3wKlVhbfAENJQaJAQkjQhoTGS5TwuzO43jhLdleL
        L5nzzzlfJjmZEQD/AhlagQytQIZG6fV6n+cfF3+BW2u1GorFG7Wmm4zARfm8gmBwCYnEDiqViprTzcPg
        IkW5xuzsHDweEYHABFKpQ3Q6HXJADy4qFPoiSZI5druASCSCXO4C7XZ7lxr8zYBIlsc5Lpebv3BtbR3Z
        7Dmen19IgYauqI8MUfTC7w8gFltFqVRSZyyJvhBFH5xOF/b3D1Cv19VZiyIGuxeEUSzML+Lo+BjVahVv
        b6/mRRputwcOxxi2trbx8HCvekyKfD6Jv2h5OYx0Oo1Wq4Vut2vuRWyDXq+Ek5NTLmDD3xkqYjXb2uTk
        FDY2NnF7ezcg0NAVsQ2xOh6P4/LySu2lBRoDIobNJiAaXQH7g0a/Chdpf41tY3p6BpnMGZ6eHskBPT5E
        CkKhMJLJPTSbTTWnm4fBRY1GA+VyWa3pJiOQoRXI0ApkaAUytAIZmgcj7xjE+pYRBoZ2AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>